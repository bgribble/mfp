name: Create release
run-name: Create release
on: [workflow_dispatch]
jobs:

  # First, get the version we are releasing
  make_release:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{steps.version.outputs.VERSION}}
      upload_url: ${{steps.create_release.outputs.upload_url}}
    steps:
      - uses: actions/checkout@v4
      # get the version for the release
      - name: Version
        run: echo "VERSION=`python ./setup.py --version`" >> "$GITHUB_OUTPUT"
        id: version
      - name: Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: mfp ${{ steps.version.outputs.VERSION }}
          tag_name: v${{ steps.version.outputs.VERSION }}
          body_path: doc/ANNOUNCE-${{ steps.version.outputs.VERSION }}.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build_matrix:
    runs-on: ubuntu-latest
    needs: make_release
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Get short Python version
        run: echo PYV=cp${{matrix.python-version}} | sed -e 's/\.//' >> $GITHUB_ENV
      - name: Get release asset filename
        run: echo RELEASE_FILE=mfp_${{ needs.make_release.outputs.VERSION }}_${{ env.PYV }}-${{ env.PYV }}_linux_x86_64.tar.gz >> $GITHUB_ENV
      - name: Update apt cache
        run: sudo apt update
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install dev files
        run: sudo apt install gcc-14 libglib2.0-dev cmake libserd-dev libjson-glib-dev libprotobuf-c-dev libjack-jackd2-dev liblo-dev lv2-dev libasound2-dev ladspa-sdk faust faust-common libfaust2t64 llvm-dev libllvmlibc-19-dev libpolly-18-dev
      - name: Configure MFP
        run: CC=gcc-14 ./waf configure
      - name: Build MFP
        run: ./waf -v -v build
      - name: Save built archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.make_release.outputs.upload_url }}
          asset_name: ${{ env.RELEASE_FILE }}
          asset_path: wafbuild/${{ env.RELEASE_FILE }}
          asset_content_type: application/gzip
